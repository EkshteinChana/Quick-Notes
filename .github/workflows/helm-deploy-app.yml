name: Helm Deploy App

on:
  repository_dispatch:
    types: [deploy-helm]
  workflow_dispatch:

jobs:
  helm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set env from payload
        run: |
          echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.client_payload.env }}" >> $GITHUB_ENV

      - name: Authenticate to GCP
        run: |
          if [[ "$BRANCH" == "prod" ]]; then
            echo '${{ secrets.GCP_SA_KEY_PROD }}' > /tmp/gcp-key.json
            echo "PROJECT_ID=quick-notes-prod-458910" >> $GITHUB_ENV
          else
            echo '${{ secrets.GCP_SA_KEY_DEV }}' > /tmp/gcp-key.json
            echo "PROJECT_ID=valiant-realm-458909-q7" >> $GITHUB_ENV
          fi
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project "$PROJECT_ID"

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: quick-notes-${{ env.BRANCH }}-gke-cluster
          location: me-west1
          project_id: ${{ env.PROJECT_ID }}


      - name: Set up Terraform (to get outputs)
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: infra/${{ github.ref_name }}
        run: terraform init
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

      - name: Extract Terraform Outputs
        working-directory: infra/${{ github.ref_name }}
        id: extract
        run: |
          echo "frontend_lb_ip=$(terraform output -raw frontend_lb_ip)" >> $GITHUB_ENV
          echo "repo_url=$(terraform output -raw repo_url)" >> $GITHUB_ENV
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Helm Deploy
        working-directory: infra/helm
        run: |
          helm upgrade quick-notes quick-notes \
            --install \
            --create-namespace \
            --namespace quick-notes-${{ env.BRANCH }} \
            --values quick-notes/values.yaml \
            --set backend.image.tag=${{ env.TAG }} \
            --set frontend.image.tag=${{ env.TAG }} \
            --set backend.image.repository="$repo_url/quick-notes-backend" \
            --set frontend.image.repository="$repo_url/quick-notes-frontend" \
            --set frontend.service.loadBalancerIP="$frontend_lb_ip" \
            --debug
